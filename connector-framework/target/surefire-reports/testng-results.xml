<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="176" passed="176">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="738" started-at="2013-05-31T12:43:07Z" finished-at="2013-05-31T12:43:08Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="738" started-at="2013-05-31T12:43:07Z" finished-at="2013-05-31T12:43:08Z">
      <class name="org.identityconnectors.framework.common.FrameworkUtilTests">
        <test-method status="PASS" signature="testFrameworkVersion()[pri:0, instance:org.identityconnectors.framework.common.FrameworkUtilTests@798be602]" name="testFrameworkVersion" duration-ms="18" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFrameworkVersion -->
        <test-method status="PASS" signature="testFrameworkVersionCannotBeBlank()[pri:0, instance:org.identityconnectors.framework.common.FrameworkUtilTests@798be602]" name="testFrameworkVersionCannotBeBlank" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFrameworkVersionCannotBeBlank -->
      </class> <!-- org.identityconnectors.framework.common.FrameworkUtilTests -->
      <class name="org.identityconnectors.framework.common.objects.AttributeUtilTests">
        <test-method status="PASS" signature="testBigDecimalValue()[pri:0, instance:org.identityconnectors.framework.common.objects.AttributeUtilTests@4db4b88d]" name="testBigDecimalValue" duration-ms="2" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <exception class="java.lang.ClassCastException">
            <message>
              <![CDATA[java.lang.String cannot be cast to java.math.BigDecimal]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ClassCastException: java.lang.String cannot be cast to java.math.BigDecimal
	at org.identityconnectors.framework.common.objects.AttributeUtil.getBigDecimalValue(AttributeUtil.java:189)
	at org.identityconnectors.framework.common.objects.AttributeUtilTests.testBigDecimalValue(AttributeUtilTests.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ClassCastException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBigDecimalValue -->
        <test-method status="PASS" signature="testEnableDate()[pri:0, instance:org.identityconnectors.framework.common.objects.AttributeUtilTests@4db4b88d]" name="testEnableDate" duration-ms="1" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnableDate -->
        <test-method status="PASS" signature="testFindMethod()[pri:0, instance:org.identityconnectors.framework.common.objects.AttributeUtilTests@4db4b88d]" name="testFindMethod" duration-ms="1" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindMethod -->
        <test-method status="PASS" signature="testGetAsStringValue()[pri:0, instance:org.identityconnectors.framework.common.objects.AttributeUtilTests@4db4b88d]" name="testGetAsStringValue" duration-ms="1" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAsStringValue -->
        <test-method status="PASS" signature="testGetBasicAttributes()[pri:0, instance:org.identityconnectors.framework.common.objects.AttributeUtilTests@4db4b88d]" name="testGetBasicAttributes" duration-ms="1" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetBasicAttributes -->
        <test-method status="PASS" signature="testGetIntegerValue()[pri:0, instance:org.identityconnectors.framework.common.objects.AttributeUtilTests@4db4b88d]" name="testGetIntegerValue" duration-ms="1" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <exception class="java.lang.ClassCastException">
            <message>
              <![CDATA[java.lang.String cannot be cast to java.lang.Integer]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ClassCastException: java.lang.String cannot be cast to java.lang.Integer
	at org.identityconnectors.framework.common.objects.AttributeUtil.getIntegerValue(AttributeUtil.java:116)
	at org.identityconnectors.framework.common.objects.AttributeUtilTests.testGetIntegerValue(AttributeUtilTests.java:98)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ClassCastException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetIntegerValue -->
        <test-method status="PASS" signature="testGetLongValue()[pri:0, instance:org.identityconnectors.framework.common.objects.AttributeUtilTests@4db4b88d]" name="testGetLongValue" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <exception class="java.lang.ClassCastException">
            <message>
              <![CDATA[java.lang.String cannot be cast to java.lang.Long]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ClassCastException: java.lang.String cannot be cast to java.lang.Long
	at org.identityconnectors.framework.common.objects.AttributeUtil.getLongValue(AttributeUtil.java:134)
	at org.identityconnectors.framework.common.objects.AttributeUtilTests.testGetLongValue(AttributeUtilTests.java:114)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ClassCastException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLongValue -->
        <test-method status="PASS" signature="testGetSingleValue()[pri:0, instance:org.identityconnectors.framework.common.objects.AttributeUtilTests@4db4b88d]" name="testGetSingleValue" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[The bob attribute is not single value attribute.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: The bob attribute is not single value attribute.
	at org.identityconnectors.framework.common.objects.AttributeUtil.getSingleValue(AttributeUtil.java:226)
	at org.identityconnectors.framework.common.objects.AttributeUtilTests.testGetSingleValue(AttributeUtilTests.java:149)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSingleValue -->
        <test-method status="PASS" signature="testGetStringValue()[pri:0, instance:org.identityconnectors.framework.common.objects.AttributeUtilTests@4db4b88d]" name="testGetStringValue" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <exception class="java.lang.ClassCastException">
            <message>
              <![CDATA[java.lang.Integer cannot be cast to java.lang.String]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ClassCastException: java.lang.Integer cannot be cast to java.lang.String
	at org.identityconnectors.framework.common.objects.AttributeUtil.getStringValue(AttributeUtil.java:63)
	at org.identityconnectors.framework.common.objects.AttributeUtilTests.testGetStringValue(AttributeUtilTests.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ClassCastException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetStringValue -->
        <test-method status="PASS" signature="testGetUidAttribute()[pri:0, instance:org.identityconnectors.framework.common.objects.AttributeUtilTests@4db4b88d]" name="testGetUidAttribute" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetUidAttribute -->
        <test-method status="PASS" signature="testIsMethod()[pri:0, instance:org.identityconnectors.framework.common.objects.AttributeUtilTests@4db4b88d]" name="testIsMethod" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsMethod -->
        <test-method status="PASS" signature="testIsSpecial()[pri:0, instance:org.identityconnectors.framework.common.objects.AttributeUtilTests@4db4b88d]" name="testIsSpecial" duration-ms="1" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsSpecial -->
        <test-method status="PASS" signature="testNamesEqual()[pri:0, instance:org.identityconnectors.framework.common.objects.AttributeUtilTests@4db4b88d]" name="testNamesEqual" duration-ms="1" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNamesEqual -->
        <test-method status="PASS" signature="testToMap()[pri:0, instance:org.identityconnectors.framework.common.objects.AttributeUtilTests@4db4b88d]" name="testToMap" duration-ms="3" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToMap -->
      </class> <!-- org.identityconnectors.framework.common.objects.AttributeUtilTests -->
      <class name="org.identityconnectors.common.StringUtilTests">
        <test-method status="PASS" signature="testEndsWith()[pri:0, instance:org.identityconnectors.common.StringUtilTests@28294944]" name="testEndsWith" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEndsWith -->
        <test-method status="PASS" signature="testIndexOfDigit()[pri:0, instance:org.identityconnectors.common.StringUtilTests@28294944]" name="testIndexOfDigit" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOfDigit -->
        <test-method status="PASS" signature="testIsBlank()[pri:0, instance:org.identityconnectors.common.StringUtilTests@28294944]" name="testIsBlank" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsBlank -->
        <test-method status="PASS" signature="testIndexOfNonDigit()[pri:0, instance:org.identityconnectors.common.StringUtilTests@28294944]" name="testIndexOfNonDigit" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOfNonDigit -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:org.identityconnectors.common.StringUtilTests@28294944]" name="testIsEmpty" duration-ms="1" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="testIsNotBlank()[pri:0, instance:org.identityconnectors.common.StringUtilTests@28294944]" name="testIsNotBlank" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsNotBlank -->
        <test-method status="PASS" signature="testIsNotEmpty()[pri:0, instance:org.identityconnectors.common.StringUtilTests@28294944]" name="testIsNotEmpty" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsNotEmpty -->
        <test-method status="PASS" signature="testParseLine()[pri:0, instance:org.identityconnectors.common.StringUtilTests@28294944]" name="testParseLine" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseLine -->
        <test-method status="PASS" signature="testRandomParseLine()[pri:0, instance:org.identityconnectors.common.StringUtilTests@28294944]" name="testRandomParseLine" duration-ms="24" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRandomParseLine -->
        <test-method status="PASS" signature="testRandomString()[pri:0, instance:org.identityconnectors.common.StringUtilTests@28294944]" name="testRandomString" duration-ms="1" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRandomString -->
        <test-method status="PASS" signature="testReplaceVariables()[pri:0, instance:org.identityconnectors.common.StringUtilTests@28294944]" name="testReplaceVariables" duration-ms="2" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReplaceVariables -->
        <test-method status="PASS" signature="testStripXmlAttribute()[pri:0, instance:org.identityconnectors.common.StringUtilTests@28294944]" name="testStripXmlAttribute" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStripXmlAttribute -->
        <test-method status="PASS" signature="testStripNewlines()[pri:0, instance:org.identityconnectors.common.StringUtilTests@28294944]" name="testStripNewlines" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStripNewlines -->
        <test-method status="PASS" signature="testStripXmlComments()[pri:0, instance:org.identityconnectors.common.StringUtilTests@28294944]" name="testStripXmlComments" duration-ms="1" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStripXmlComments -->
        <test-method status="PASS" signature="testSubDigitString()[pri:0, instance:org.identityconnectors.common.StringUtilTests@28294944]" name="testSubDigitString" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubDigitString -->
        <test-method status="PASS" signature="testToProperties()[pri:0, instance:org.identityconnectors.common.StringUtilTests@28294944]" name="testToProperties" duration-ms="1" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToProperties -->
        <test-method status="PASS" signature="testWhtiespace()[pri:0, instance:org.identityconnectors.common.StringUtilTests@28294944]" name="testWhtiespace" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWhtiespace -->
      </class> <!-- org.identityconnectors.common.StringUtilTests -->
      <class name="org.identityconnectors.common.VersionTests">
        <test-method status="PASS" signature="testCompare()[pri:0, instance:org.identityconnectors.common.VersionTests@26b923ee]" name="testCompare" duration-ms="1" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompare -->
        <test-method status="PASS" signature="testComponents()[pri:0, instance:org.identityconnectors.common.VersionTests@26b923ee]" name="testComponents" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testComponents -->
        <test-method status="PASS" signature="testCornerCases()[pri:0, instance:org.identityconnectors.common.VersionTests@26b923ee]" name="testCornerCases" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCornerCases -->
        <test-method status="PASS" signature="testParse()[pri:0, instance:org.identityconnectors.common.VersionTests@26b923ee]" name="testParse" duration-ms="1" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParse -->
        <test-method status="PASS" signature="testEqualsHashCode()[pri:0, instance:org.identityconnectors.common.VersionTests@26b923ee]" name="testEqualsHashCode" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEqualsHashCode -->
        <test-method status="PASS" signature="testQualifiedIgnored()[pri:0, instance:org.identityconnectors.common.VersionTests@26b923ee]" name="testQualifiedIgnored" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testQualifiedIgnored -->
        <test-method status="PASS" signature="testToString()[pri:0, instance:org.identityconnectors.common.VersionTests@26b923ee]" name="testToString" duration-ms="1" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToString -->
      </class> <!-- org.identityconnectors.common.VersionTests -->
      <class name="org.identityconnectors.framework.common.objects.AttributeInfoUtilTests">
        <test-method status="PASS" signature="testCurrentPasswordBuild()[pri:0, instance:org.identityconnectors.framework.common.objects.AttributeInfoUtilTests@3051c45f]" name="testCurrentPasswordBuild" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Password based attributes must be of type GuardedString.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Password based attributes must be of type GuardedString.
	at org.identityconnectors.framework.common.objects.AttributeInfo.<init>(AttributeInfo.java:81)
	at org.identityconnectors.framework.common.objects.AttributeInfoBuilder.build(AttributeInfoBuilder.java:118)
	at org.identityconnectors.framework.common.objects.AttributeInfoBuilder.build(AttributeInfoBuilder.java:242)
	at org.identityconnectors.framework.common.objects.AttributeInfoBuilder.build(AttributeInfoBuilder.java:257)
	at org.identityconnectors.framework.common.objects.AttributeInfoBuilder.build(AttributeInfoBuilder.java:270)
	at org.identityconnectors.framework.common.objects.AttributeInfoUtilTests.testCurrentPasswordBuild(AttributeInfoUtilTests.java:62)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCurrentPasswordBuild -->
        <test-method status="PASS" signature="testFindMethod()[pri:0, instance:org.identityconnectors.framework.common.objects.AttributeInfoUtilTests@3051c45f]" name="testFindMethod" duration-ms="1" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindMethod -->
        <test-method status="PASS" signature="testIsMethod()[pri:0, instance:org.identityconnectors.framework.common.objects.AttributeInfoUtilTests@3051c45f]" name="testIsMethod" duration-ms="1" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsMethod -->
        <test-method status="PASS" signature="testPasswordBuild()[pri:0, instance:org.identityconnectors.framework.common.objects.AttributeInfoUtilTests@3051c45f]" name="testPasswordBuild" duration-ms="1" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Password based attributes must be of type GuardedString.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Password based attributes must be of type GuardedString.
	at org.identityconnectors.framework.common.objects.AttributeInfo.<init>(AttributeInfo.java:81)
	at org.identityconnectors.framework.common.objects.AttributeInfoBuilder.build(AttributeInfoBuilder.java:118)
	at org.identityconnectors.framework.common.objects.AttributeInfoBuilder.build(AttributeInfoBuilder.java:242)
	at org.identityconnectors.framework.common.objects.AttributeInfoBuilder.build(AttributeInfoBuilder.java:257)
	at org.identityconnectors.framework.common.objects.AttributeInfoBuilder.build(AttributeInfoBuilder.java:270)
	at org.identityconnectors.framework.common.objects.AttributeInfoUtilTests.testPasswordBuild(AttributeInfoUtilTests.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPasswordBuild -->
        <test-method status="PASS" signature="testRegularPassword()[pri:0, instance:org.identityconnectors.framework.common.objects.AttributeInfoUtilTests@3051c45f]" name="testRegularPassword" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegularPassword -->
      </class> <!-- org.identityconnectors.framework.common.objects.AttributeInfoUtilTests -->
      <class name="org.identityconnectors.framework.common.objects.ObjectClassTests">
        <test-method status="PASS" signature="testEquals()[pri:0, instance:org.identityconnectors.framework.common.objects.ObjectClassTests@6ea079d0]" name="testEquals" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEquals -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.identityconnectors.framework.common.objects.ObjectClassTests@6ea079d0]" name="before" is-config="true" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="testEqualsObservesLocale()[pri:0, instance:org.identityconnectors.framework.common.objects.ObjectClassTests@6ea079d0]" name="testEqualsObservesLocale" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEqualsObservesLocale -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.identityconnectors.framework.common.objects.ObjectClassTests@6ea079d0]" name="before" is-config="true" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.identityconnectors.framework.common.objects.ObjectClassTests@6ea079d0]" name="before" is-config="true" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="testHashCode()[pri:0, instance:org.identityconnectors.framework.common.objects.ObjectClassTests@6ea079d0]" name="testHashCode" duration-ms="1" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHashCode -->
        <test-method status="PASS" signature="testHashCodeIndependentOnLocale()[pri:0, instance:org.identityconnectors.framework.common.objects.ObjectClassTests@6ea079d0]" name="testHashCodeIndependentOnLocale" duration-ms="1" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHashCodeIndependentOnLocale -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.identityconnectors.framework.common.objects.ObjectClassTests@6ea079d0]" name="before" is-config="true" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.identityconnectors.framework.common.objects.ObjectClassTests@6ea079d0]" name="before" is-config="true" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="testIs()[pri:0, instance:org.identityconnectors.framework.common.objects.ObjectClassTests@6ea079d0]" name="testIs" duration-ms="1" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIs -->
      </class> <!-- org.identityconnectors.framework.common.objects.ObjectClassTests -->
      <class name="org.identityconnectors.common.CollectionUtilTests">
        <test-method status="PASS" signature="testAsList()[pri:0, instance:org.identityconnectors.common.CollectionUtilTests@3694f9de]" name="testAsList" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAsList -->
        <test-method status="PASS" signature="testAsSet()[pri:0, instance:org.identityconnectors.common.CollectionUtilTests@3694f9de]" name="testAsSet" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAsSet -->
        <test-method status="PASS" signature="testHashCode()[pri:0, instance:org.identityconnectors.common.CollectionUtilTests@3694f9de]" name="testHashCode" duration-ms="1" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHashCode -->
        <test-method status="PASS" signature="testEquals()[pri:0, instance:org.identityconnectors.common.CollectionUtilTests@3694f9de]" name="testEquals" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEquals -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:org.identityconnectors.common.CollectionUtilTests@3694f9de]" name="testIsEmpty" duration-ms="1" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="testList()[pri:0, instance:org.identityconnectors.common.CollectionUtilTests@3694f9de]" name="testList" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
	at java.util.Collections$UnmodifiableCollection.remove(Collections.java:1078)
	at org.identityconnectors.common.CollectionUtilTests.testList(CollectionUtilTests.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testList -->
        <test-method status="PASS" signature="testNullAsEmptyList()[pri:0, instance:org.identityconnectors.common.CollectionUtilTests@3694f9de]" name="testNullAsEmptyList" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNullAsEmptyList -->
        <test-method status="PASS" signature="testNullAsEmptyMap()[pri:0, instance:org.identityconnectors.common.CollectionUtilTests@3694f9de]" name="testNullAsEmptyMap" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNullAsEmptyMap -->
        <test-method status="PASS" signature="testNullAsEmptySet()[pri:0, instance:org.identityconnectors.common.CollectionUtilTests@3694f9de]" name="testNullAsEmptySet" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNullAsEmptySet -->
        <test-method status="PASS" signature="testReadonlyList()[pri:0, instance:org.identityconnectors.common.CollectionUtilTests@3694f9de]" name="testReadonlyList" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadonlyList -->
        <test-method status="PASS" signature="testSet()[pri:0, instance:org.identityconnectors.common.CollectionUtilTests@3694f9de]" name="testSet" duration-ms="1" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
	at java.util.Collections$UnmodifiableCollection.add(Collections.java:1075)
	at org.identityconnectors.common.CollectionUtilTests.testSet(CollectionUtilTests.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet -->
        <test-method status="PASS" signature="testReadonlySet()[pri:0, instance:org.identityconnectors.common.CollectionUtilTests@3694f9de]" name="testReadonlySet" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadonlySet -->
        <test-method status="PASS" signature="testUnique()[pri:0, instance:org.identityconnectors.common.CollectionUtilTests@3694f9de]" name="testUnique" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUnique -->
      </class> <!-- org.identityconnectors.common.CollectionUtilTests -->
      <class name="org.identityconnectors.common.security.GuardedStringTests">
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.identityconnectors.common.security.GuardedStringTests@70ec46ff]" name="setUp" is-config="true" duration-ms="1" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testBasics()[pri:0, instance:org.identityconnectors.common.security.GuardedStringTests@70ec46ff]" name="testBasics" duration-ms="1" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBasics -->
        <test-method status="PASS" signature="testDispose()[pri:0, instance:org.identityconnectors.common.security.GuardedStringTests@70ec46ff]" name="testDispose" duration-ms="1" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDispose -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.identityconnectors.common.security.GuardedStringTests@70ec46ff]" name="tearDown" is-config="true" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.identityconnectors.common.security.GuardedStringTests@70ec46ff]" name="setUp" is-config="true" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testEquals()[pri:0, instance:org.identityconnectors.common.security.GuardedStringTests@70ec46ff]" name="testEquals" duration-ms="1" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEquals -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.identityconnectors.common.security.GuardedStringTests@70ec46ff]" name="tearDown" is-config="true" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.identityconnectors.common.security.GuardedStringTests@70ec46ff]" name="setUp" is-config="true" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.identityconnectors.common.security.GuardedStringTests@70ec46ff]" name="setUp" is-config="true" duration-ms="1" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.identityconnectors.common.security.GuardedStringTests@70ec46ff]" name="tearDown" is-config="true" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testReadOnly()[pri:0, instance:org.identityconnectors.common.security.GuardedStringTests@70ec46ff]" name="testReadOnly" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadOnly -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.identityconnectors.common.security.GuardedStringTests@70ec46ff]" name="tearDown" is-config="true" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testUnicode()[pri:0, instance:org.identityconnectors.common.security.GuardedStringTests@70ec46ff]" name="testUnicode" duration-ms="416" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUnicode -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.identityconnectors.common.security.GuardedStringTests@70ec46ff]" name="setUp" is-config="true" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.identityconnectors.common.security.GuardedStringTests@70ec46ff]" name="tearDown" is-config="true" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- org.identityconnectors.common.security.GuardedStringTests -->
      <class name="org.identityconnectors.framework.common.objects.filter.FilterTranslatorTests">
        <test-method status="PASS" signature="testBasics()[pri:0, instance:org.identityconnectors.framework.common.objects.filter.FilterTranslatorTests@2d97c1b1]" name="testBasics" duration-ms="1" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBasics -->
        <test-method status="PASS" signature="testDistribution()[pri:0, instance:org.identityconnectors.framework.common.objects.filter.FilterTranslatorTests@2d97c1b1]" name="testDistribution" duration-ms="29" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDistribution -->
        <test-method status="PASS" signature="testSimplifyNoAnd()[pri:0, instance:org.identityconnectors.framework.common.objects.filter.FilterTranslatorTests@2d97c1b1]" name="testSimplifyNoAnd" duration-ms="1" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimplifyNoAnd -->
        <test-method status="PASS" signature="testSimplifyNoAndNoLeaf()[pri:0, instance:org.identityconnectors.framework.common.objects.filter.FilterTranslatorTests@2d97c1b1]" name="testSimplifyNoAndNoLeaf" duration-ms="1" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimplifyNoAndNoLeaf -->
        <test-method status="PASS" signature="testSimplifyNoAndNoOrNoLeaf()[pri:0, instance:org.identityconnectors.framework.common.objects.filter.FilterTranslatorTests@2d97c1b1]" name="testSimplifyNoAndNoOrNoLeaf" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimplifyNoAndNoOrNoLeaf -->
        <test-method status="PASS" signature="testSimplifyNoLeaf()[pri:0, instance:org.identityconnectors.framework.common.objects.filter.FilterTranslatorTests@2d97c1b1]" name="testSimplifyNoLeaf" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimplifyNoLeaf -->
        <test-method status="PASS" signature="testSimplifyNoLeafNoOr()[pri:0, instance:org.identityconnectors.framework.common.objects.filter.FilterTranslatorTests@2d97c1b1]" name="testSimplifyNoLeafNoOr" duration-ms="1" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimplifyNoLeafNoOr -->
      </class> <!-- org.identityconnectors.framework.common.objects.filter.FilterTranslatorTests -->
      <class name="org.identityconnectors.framework.common.objects.AttributeBuilderTests">
        <test-method status="PASS" signature="buildBoolean()[pri:0, instance:org.identityconnectors.framework.common.objects.AttributeBuilderTests@499977e3]" name="buildBoolean" duration-ms="28" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildBoolean -->
        <test-method status="PASS" signature="nameFromBuilder()[pri:0, instance:org.identityconnectors.framework.common.objects.AttributeBuilderTests@499977e3]" name="nameFromBuilder" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Must be a single value.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Must be a single value.
	at org.identityconnectors.framework.common.objects.AttributeBuilder.checkSingleValue(AttributeBuilder.java:200)
	at org.identityconnectors.framework.common.objects.AttributeBuilder.getSingleStringValue(AttributeBuilder.java:211)
	at org.identityconnectors.framework.common.objects.AttributeBuilder.build(AttributeBuilder.java:186)
	at org.identityconnectors.framework.common.objects.AttributeBuilder.build(AttributeBuilder.java:69)
	at org.identityconnectors.framework.common.objects.AttributeBuilderTests.nameFromBuilder(AttributeBuilderTests.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameFromBuilder -->
        <test-method status="PASS" signature="nullAttribute()[pri:0, instance:org.identityconnectors.framework.common.objects.AttributeBuilderTests@499977e3]" name="nullAttribute" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nullAttribute -->
        <test-method status="PASS" signature="uidFromBuilderDouble()[pri:0, instance:org.identityconnectors.framework.common.objects.AttributeBuilderTests@499977e3]" name="uidFromBuilderDouble" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Attribute value must be an instance of String.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Attribute value must be an instance of String.
	at org.identityconnectors.framework.common.objects.AttributeBuilder.getSingleStringValue(AttributeBuilder.java:213)
	at org.identityconnectors.framework.common.objects.AttributeBuilder.build(AttributeBuilder.java:184)
	at org.identityconnectors.framework.common.objects.AttributeBuilder.build(AttributeBuilder.java:87)
	at org.identityconnectors.framework.common.objects.AttributeBuilderTests.uidFromBuilderDouble(AttributeBuilderTests.java:87)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- uidFromBuilderDouble -->
        <test-method status="PASS" signature="uidFromBuilderInteger()[pri:0, instance:org.identityconnectors.framework.common.objects.AttributeBuilderTests@499977e3]" name="uidFromBuilderInteger" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Attribute value must be an instance of String.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Attribute value must be an instance of String.
	at org.identityconnectors.framework.common.objects.AttributeBuilder.getSingleStringValue(AttributeBuilder.java:213)
	at org.identityconnectors.framework.common.objects.AttributeBuilder.build(AttributeBuilder.java:184)
	at org.identityconnectors.framework.common.objects.AttributeBuilder.build(AttributeBuilder.java:87)
	at org.identityconnectors.framework.common.objects.AttributeBuilderTests.uidFromBuilderInteger(AttributeBuilderTests.java:79)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- uidFromBuilderInteger -->
        <test-method status="PASS" signature="uidFromBuilderLong()[pri:0, instance:org.identityconnectors.framework.common.objects.AttributeBuilderTests@499977e3]" name="uidFromBuilderLong" duration-ms="1" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Attribute value must be an instance of String.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Attribute value must be an instance of String.
	at org.identityconnectors.framework.common.objects.AttributeBuilder.getSingleStringValue(AttributeBuilder.java:213)
	at org.identityconnectors.framework.common.objects.AttributeBuilder.build(AttributeBuilder.java:184)
	at org.identityconnectors.framework.common.objects.AttributeBuilder.build(AttributeBuilder.java:87)
	at org.identityconnectors.framework.common.objects.AttributeBuilderTests.uidFromBuilderLong(AttributeBuilderTests.java:83)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- uidFromBuilderLong -->
      </class> <!-- org.identityconnectors.framework.common.objects.AttributeBuilderTests -->
      <class name="org.identityconnectors.common.ReflectionUtilTests">
        <test-method status="PASS" signature="functional()[pri:0, instance:org.identityconnectors.common.ReflectionUtilTests@5e406eac]" name="functional" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- functional -->
      </class> <!-- org.identityconnectors.common.ReflectionUtilTests -->
      <class name="org.identityconnectors.common.logging.LogTests">
        <test-method status="PASS" signature="checkBasicLogging()[pri:0, instance:org.identityconnectors.common.logging.LogTests@390853bb]" name="checkBasicLogging" duration-ms="7" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBasicLogging -->
        <test-method status="PASS" signature="checkBasicLoggingWithExceptionAndFormating()[pri:0, instance:org.identityconnectors.common.logging.LogTests@390853bb]" name="checkBasicLoggingWithExceptionAndFormating" duration-ms="1" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBasicLoggingWithExceptionAndFormating -->
        <test-method status="PASS" signature="checkBasicLoggingOff()[pri:0, instance:org.identityconnectors.common.logging.LogTests@390853bb]" name="checkBasicLoggingOff" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBasicLoggingOff -->
        <test-method status="PASS" signature="checkBasicLoggingWithFormating()[pri:0, instance:org.identityconnectors.common.logging.LogTests@390853bb]" name="checkBasicLoggingWithFormating" duration-ms="1" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkBasicLoggingWithFormating -->
        <test-method status="PASS" signature="checkFullLogMessage()[pri:0, instance:org.identityconnectors.common.logging.LogTests@390853bb]" name="checkFullLogMessage" duration-ms="8" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkFullLogMessage -->
        <test-method status="PASS" signature="checkGetLog()[pri:0, instance:org.identityconnectors.common.logging.LogTests@390853bb]" name="checkGetLog" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at org.identityconnectors.common.logging.Log.getLog(Log.java:133)
	at org.identityconnectors.common.logging.LogTests.checkGetLog(LogTests.java:293)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkGetLog -->
        <test-method status="PASS" signature="checkMessageLog()[pri:0, instance:org.identityconnectors.common.logging.LogTests@390853bb]" name="checkMessageLog" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkMessageLog -->
        <test-method status="PASS" signature="checkIsLoggableMethods()[pri:0, instance:org.identityconnectors.common.logging.LogTests@390853bb]" name="checkIsLoggableMethods" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIsLoggableMethods -->
        <test-method status="PASS" signature="checkSystemProperty()[pri:0, instance:org.identityconnectors.common.logging.LogTests@390853bb]" name="checkSystemProperty" duration-ms="2" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkSystemProperty -->
      </class> <!-- org.identityconnectors.common.logging.LogTests -->
      <class name="org.identityconnectors.framework.common.objects.ObjectClassInfoTests">
        <test-method status="PASS" signature="before()[pri:0, instance:org.identityconnectors.framework.common.objects.ObjectClassInfoTests@1b23b8f7]" name="before" is-config="true" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="testAllDuplicate()[pri:0, instance:org.identityconnectors.framework.common.objects.ObjectClassInfoTests@1b23b8f7]" name="testAllDuplicate" duration-ms="2" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[AttributeInfo of name 'bob' already exists!]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: AttributeInfo of name 'bob' already exists!
	at org.identityconnectors.framework.common.objects.ObjectClassInfoBuilder.addAttributeInfo(ObjectClassInfoBuilder.java:70)
	at org.identityconnectors.framework.common.objects.ObjectClassInfoBuilder.addAllAttributeInfo(ObjectClassInfoBuilder.java:83)
	at org.identityconnectors.framework.common.objects.ObjectClassInfoTests.testAllDuplicate(ObjectClassInfoTests.java:70)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllDuplicate -->
        <test-method status="PASS" signature="testBuilderAddsName()[pri:0, instance:org.identityconnectors.framework.common.objects.ObjectClassInfoTests@1b23b8f7]" name="testBuilderAddsName" duration-ms="1" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuilderAddsName -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.identityconnectors.framework.common.objects.ObjectClassInfoTests@1b23b8f7]" name="before" is-config="true" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.identityconnectors.framework.common.objects.ObjectClassInfoTests@1b23b8f7]" name="before" is-config="true" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="testDuplicate()[pri:0, instance:org.identityconnectors.framework.common.objects.ObjectClassInfoTests@1b23b8f7]" name="testDuplicate" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[AttributeInfo of name 'bob' already exists!]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: AttributeInfo of name 'bob' already exists!
	at org.identityconnectors.framework.common.objects.ObjectClassInfoBuilder.addAttributeInfo(ObjectClassInfoBuilder.java:70)
	at org.identityconnectors.framework.common.objects.ObjectClassInfoTests.testDuplicate(ObjectClassInfoTests.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDuplicate -->
        <test-method status="PASS" signature="testEquals()[pri:0, instance:org.identityconnectors.framework.common.objects.ObjectClassInfoTests@1b23b8f7]" name="testEquals" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEquals -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.identityconnectors.framework.common.objects.ObjectClassInfoTests@1b23b8f7]" name="before" is-config="true" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.identityconnectors.framework.common.objects.ObjectClassInfoTests@1b23b8f7]" name="before" is-config="true" duration-ms="1" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="testHashCode()[pri:0, instance:org.identityconnectors.framework.common.objects.ObjectClassInfoTests@1b23b8f7]" name="testHashCode" duration-ms="1" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHashCode -->
        <test-method status="PASS" signature="testEqualsObservesLocale()[pri:0, instance:org.identityconnectors.framework.common.objects.ObjectClassInfoTests@1b23b8f7]" name="testEqualsObservesLocale" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEqualsObservesLocale -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.identityconnectors.framework.common.objects.ObjectClassInfoTests@1b23b8f7]" name="before" is-config="true" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.identityconnectors.framework.common.objects.ObjectClassInfoTests@1b23b8f7]" name="before" is-config="true" duration-ms="1" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.identityconnectors.framework.common.objects.ObjectClassInfoTests@1b23b8f7]" name="before" is-config="true" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="testHashCodeIndependentOnLocale()[pri:0, instance:org.identityconnectors.framework.common.objects.ObjectClassInfoTests@1b23b8f7]" name="testHashCodeIndependentOnLocale" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHashCodeIndependentOnLocale -->
        <test-method status="PASS" signature="testIs()[pri:0, instance:org.identityconnectors.framework.common.objects.ObjectClassInfoTests@1b23b8f7]" name="testIs" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIs -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.identityconnectors.framework.common.objects.ObjectClassInfoTests@1b23b8f7]" name="before" is-config="true" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="testNoName()[pri:0, instance:org.identityconnectors.framework.common.objects.ObjectClassInfoTests@1b23b8f7]" name="testNoName" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Missing 'Name' attribute info.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Missing 'Name' attribute info.
	at org.identityconnectors.framework.common.objects.ObjectClassInfo.<init>(ObjectClassInfo.java:65)
	at org.identityconnectors.framework.common.objects.ObjectClassInfoTests.testNoName(ObjectClassInfoTests.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoName -->
      </class> <!-- org.identityconnectors.framework.common.objects.ObjectClassInfoTests -->
      <class name="org.identityconnectors.common.UtilTests">
        <test-method status="PASS" signature="testForceCompare()[pri:0, instance:org.identityconnectors.common.UtilTests@699d7f6d]" name="testForceCompare" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testForceCompare -->
        <test-method status="PASS" signature="testGetMethodName()[pri:0, instance:org.identityconnectors.common.UtilTests@699d7f6d]" name="testGetMethodName" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMethodName -->
      </class> <!-- org.identityconnectors.common.UtilTests -->
      <class name="org.identityconnectors.common.IOUtilsTests">
        <test-method status="PASS" signature="quietClose()[pri:0, instance:org.identityconnectors.common.IOUtilsTests@58220e8b]" name="quietClose" duration-ms="1" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quietClose -->
        <test-method status="PASS" signature="resourcePath()[pri:0, instance:org.identityconnectors.common.IOUtilsTests@58220e8b]" name="resourcePath" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resourcePath -->
      </class> <!-- org.identityconnectors.common.IOUtilsTests -->
      <class name="org.identityconnectors.common.EqualsHashCodeBuilderTests">
        <test-method status="PASS" signature="testBeanComparison()[pri:0, instance:org.identityconnectors.common.EqualsHashCodeBuilderTests@7d4012b3]" name="testBeanComparison" duration-ms="3" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBeanComparison -->
        <test-method status="PASS" signature="testBoolean()[pri:0, instance:org.identityconnectors.common.EqualsHashCodeBuilderTests@7d4012b3]" name="testBoolean" duration-ms="1" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBoolean -->
        <test-method status="PASS" signature="testBooleanArray()[pri:0, instance:org.identityconnectors.common.EqualsHashCodeBuilderTests@7d4012b3]" name="testBooleanArray" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBooleanArray -->
        <test-method status="PASS" signature="testBooleanArrayHiddenByObject()[pri:0, instance:org.identityconnectors.common.EqualsHashCodeBuilderTests@7d4012b3]" name="testBooleanArrayHiddenByObject" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBooleanArrayHiddenByObject -->
        <test-method status="PASS" signature="testByte()[pri:0, instance:org.identityconnectors.common.EqualsHashCodeBuilderTests@7d4012b3]" name="testByte" duration-ms="1" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testByte -->
        <test-method status="PASS" signature="testByteArray()[pri:0, instance:org.identityconnectors.common.EqualsHashCodeBuilderTests@7d4012b3]" name="testByteArray" duration-ms="1" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testByteArray -->
        <test-method status="PASS" signature="testByteArrayHiddenByObject()[pri:0, instance:org.identityconnectors.common.EqualsHashCodeBuilderTests@7d4012b3]" name="testByteArrayHiddenByObject" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testByteArrayHiddenByObject -->
        <test-method status="PASS" signature="testCharArray()[pri:0, instance:org.identityconnectors.common.EqualsHashCodeBuilderTests@7d4012b3]" name="testCharArray" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCharArray -->
        <test-method status="PASS" signature="testChar()[pri:0, instance:org.identityconnectors.common.EqualsHashCodeBuilderTests@7d4012b3]" name="testChar" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testChar -->
        <test-method status="PASS" signature="testCharArrayHiddenByObject()[pri:0, instance:org.identityconnectors.common.EqualsHashCodeBuilderTests@7d4012b3]" name="testCharArrayHiddenByObject" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCharArrayHiddenByObject -->
        <test-method status="PASS" signature="testDouble()[pri:0, instance:org.identityconnectors.common.EqualsHashCodeBuilderTests@7d4012b3]" name="testDouble" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDouble -->
        <test-method status="PASS" signature="testDoubleArray()[pri:0, instance:org.identityconnectors.common.EqualsHashCodeBuilderTests@7d4012b3]" name="testDoubleArray" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDoubleArray -->
        <test-method status="PASS" signature="testDoubleArrayHiddenByObject()[pri:0, instance:org.identityconnectors.common.EqualsHashCodeBuilderTests@7d4012b3]" name="testDoubleArrayHiddenByObject" duration-ms="1" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDoubleArrayHiddenByObject -->
        <test-method status="PASS" signature="testFloatArray()[pri:0, instance:org.identityconnectors.common.EqualsHashCodeBuilderTests@7d4012b3]" name="testFloatArray" duration-ms="1" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFloatArray -->
        <test-method status="PASS" signature="testFloat()[pri:0, instance:org.identityconnectors.common.EqualsHashCodeBuilderTests@7d4012b3]" name="testFloat" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFloat -->
        <test-method status="PASS" signature="testFloatArrayHiddenByObject()[pri:0, instance:org.identityconnectors.common.EqualsHashCodeBuilderTests@7d4012b3]" name="testFloatArrayHiddenByObject" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFloatArrayHiddenByObject -->
        <test-method status="PASS" signature="testInt()[pri:0, instance:org.identityconnectors.common.EqualsHashCodeBuilderTests@7d4012b3]" name="testInt" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInt -->
        <test-method status="PASS" signature="testIntArray()[pri:0, instance:org.identityconnectors.common.EqualsHashCodeBuilderTests@7d4012b3]" name="testIntArray" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIntArray -->
        <test-method status="PASS" signature="testIntArrayHiddenByObject()[pri:0, instance:org.identityconnectors.common.EqualsHashCodeBuilderTests@7d4012b3]" name="testIntArrayHiddenByObject" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIntArrayHiddenByObject -->
        <test-method status="PASS" signature="testList()[pri:0, instance:org.identityconnectors.common.EqualsHashCodeBuilderTests@7d4012b3]" name="testList" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testList -->
        <test-method status="PASS" signature="testLong()[pri:0, instance:org.identityconnectors.common.EqualsHashCodeBuilderTests@7d4012b3]" name="testLong" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLong -->
        <test-method status="PASS" signature="testLongArray()[pri:0, instance:org.identityconnectors.common.EqualsHashCodeBuilderTests@7d4012b3]" name="testLongArray" duration-ms="1" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLongArray -->
        <test-method status="PASS" signature="testNonCollectionSupport()[pri:0, instance:org.identityconnectors.common.EqualsHashCodeBuilderTests@7d4012b3]" name="testNonCollectionSupport" duration-ms="1" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNonCollectionSupport -->
        <test-method status="PASS" signature="testLongArrayHiddenByObject()[pri:0, instance:org.identityconnectors.common.EqualsHashCodeBuilderTests@7d4012b3]" name="testLongArrayHiddenByObject" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLongArrayHiddenByObject -->
        <test-method status="PASS" signature="testObjectArray()[pri:0, instance:org.identityconnectors.common.EqualsHashCodeBuilderTests@7d4012b3]" name="testObjectArray" duration-ms="1" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testObjectArray -->
        <test-method status="PASS" signature="testObject()[pri:0, instance:org.identityconnectors.common.EqualsHashCodeBuilderTests@7d4012b3]" name="testObject" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testObject -->
        <test-method status="PASS" signature="testObjectArrayHiddenByObject()[pri:0, instance:org.identityconnectors.common.EqualsHashCodeBuilderTests@7d4012b3]" name="testObjectArrayHiddenByObject" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testObjectArrayHiddenByObject -->
        <test-method status="PASS" signature="testShort()[pri:0, instance:org.identityconnectors.common.EqualsHashCodeBuilderTests@7d4012b3]" name="testShort" duration-ms="1" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testShort -->
        <test-method status="PASS" signature="testSet()[pri:0, instance:org.identityconnectors.common.EqualsHashCodeBuilderTests@7d4012b3]" name="testSet" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet -->
        <test-method status="PASS" signature="testShortArray()[pri:0, instance:org.identityconnectors.common.EqualsHashCodeBuilderTests@7d4012b3]" name="testShortArray" duration-ms="1" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testShortArray -->
        <test-method status="PASS" signature="testUnrelatedClasses()[pri:0, instance:org.identityconnectors.common.EqualsHashCodeBuilderTests@7d4012b3]" name="testUnrelatedClasses" duration-ms="1" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUnrelatedClasses -->
        <test-method status="PASS" signature="testShortArrayHiddenByObject()[pri:0, instance:org.identityconnectors.common.EqualsHashCodeBuilderTests@7d4012b3]" name="testShortArrayHiddenByObject" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testShortArrayHiddenByObject -->
      </class> <!-- org.identityconnectors.common.EqualsHashCodeBuilderTests -->
      <class name="org.identityconnectors.common.StringPrintWriterTests">
        <test-method status="PASS" signature="getReader()[pri:0, instance:org.identityconnectors.common.StringPrintWriterTests@44e5f21e]" name="getReader" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getReader -->
        <test-method status="PASS" signature="getString()[pri:0, instance:org.identityconnectors.common.StringPrintWriterTests@44e5f21e]" name="getString" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getString -->
        <test-method status="PASS" signature="println()[pri:0, instance:org.identityconnectors.common.StringPrintWriterTests@44e5f21e]" name="println" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- println -->
        <test-method status="PASS" signature="printArray()[pri:0, instance:org.identityconnectors.common.StringPrintWriterTests@44e5f21e]" name="printArray" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printArray -->
      </class> <!-- org.identityconnectors.common.StringPrintWriterTests -->
      <class name="org.identityconnectors.framework.common.objects.AttributeTests">
        <test-method status="PASS" signature="before()[pri:0, instance:org.identityconnectors.framework.common.objects.AttributeTests@1ed6ecc2]" name="before" is-config="true" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="testArrays()[pri:0, instance:org.identityconnectors.framework.common.objects.AttributeTests@1ed6ecc2]" name="testArrays" duration-ms="1" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testArrays -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.identityconnectors.framework.common.objects.AttributeTests@1ed6ecc2]" name="before" is-config="true" duration-ms="1" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="testEqualsObservesLocale()[pri:0, instance:org.identityconnectors.framework.common.objects.AttributeTests@1ed6ecc2]" name="testEqualsObservesLocale" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEqualsObservesLocale -->
        <test-method status="PASS" signature="testHashCodeIndependentOnLocale()[pri:0, instance:org.identityconnectors.framework.common.objects.AttributeTests@1ed6ecc2]" name="testHashCodeIndependentOnLocale" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHashCodeIndependentOnLocale -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.identityconnectors.framework.common.objects.AttributeTests@1ed6ecc2]" name="before" is-config="true" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.identityconnectors.framework.common.objects.AttributeTests@1ed6ecc2]" name="before" is-config="true" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="testName()[pri:0, instance:org.identityconnectors.framework.common.objects.AttributeTests@1ed6ecc2]" name="testName" duration-ms="1" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testName -->
        <test-method status="PASS" signature="testNormal()[pri:0, instance:org.identityconnectors.framework.common.objects.AttributeTests@1ed6ecc2]" name="testNormal" duration-ms="1" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNormal -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.identityconnectors.framework.common.objects.AttributeTests@1ed6ecc2]" name="before" is-config="true" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
      </class> <!-- org.identityconnectors.framework.common.objects.AttributeTests -->
      <class name="org.identityconnectors.framework.common.objects.ObjectClassUtilTests">
        <test-method status="PASS" signature="testIsSpecial()[pri:0, instance:org.identityconnectors.framework.common.objects.ObjectClassUtilTests@220acc95]" name="testIsSpecial" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsSpecial -->
        <test-method status="PASS" signature="testNamesEqual()[pri:0, instance:org.identityconnectors.framework.common.objects.ObjectClassUtilTests@220acc95]" name="testNamesEqual" duration-ms="1" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNamesEqual -->
      </class> <!-- org.identityconnectors.framework.common.objects.ObjectClassUtilTests -->
      <class name="org.identityconnectors.common.script.ScriptExecutorFactoryTests">
        <test-method status="PASS" signature="testRegisteredFactories()[pri:0, instance:org.identityconnectors.common.script.ScriptExecutorFactoryTests@4fa9cba5]" name="testRegisteredFactories" duration-ms="5" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegisteredFactories -->
      </class> <!-- org.identityconnectors.common.script.ScriptExecutorFactoryTests -->
      <class name="org.identityconnectors.common.PairTests">
        <test-method status="PASS" signature="equals()[pri:0, instance:org.identityconnectors.common.PairTests@63190346]" name="equals" duration-ms="1" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="PASS" signature="hash()[pri:0, instance:org.identityconnectors.common.PairTests@63190346]" name="hash" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hash -->
      </class> <!-- org.identityconnectors.common.PairTests -->
      <class name="org.identityconnectors.common.security.GuardedByteArrayTests">
        <test-method status="PASS" signature="testBasics()[pri:0, instance:org.identityconnectors.common.security.GuardedByteArrayTests@2797e57c]" name="testBasics" duration-ms="7" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBasics -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.identityconnectors.common.security.GuardedByteArrayTests@2797e57c]" name="setUp" is-config="true" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.identityconnectors.common.security.GuardedByteArrayTests@2797e57c]" name="tearDown" is-config="true" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.identityconnectors.common.security.GuardedByteArrayTests@2797e57c]" name="setUp" is-config="true" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.identityconnectors.common.security.GuardedByteArrayTests@2797e57c]" name="tearDown" is-config="true" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testDispose()[pri:0, instance:org.identityconnectors.common.security.GuardedByteArrayTests@2797e57c]" name="testDispose" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDispose -->
        <test-method status="PASS" signature="testEquals()[pri:0, instance:org.identityconnectors.common.security.GuardedByteArrayTests@2797e57c]" name="testEquals" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEquals -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.identityconnectors.common.security.GuardedByteArrayTests@2797e57c]" name="tearDown" is-config="true" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.identityconnectors.common.security.GuardedByteArrayTests@2797e57c]" name="setUp" is-config="true" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testRange()[pri:0, instance:org.identityconnectors.common.security.GuardedByteArrayTests@2797e57c]" name="testRange" duration-ms="14" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRange -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.identityconnectors.common.security.GuardedByteArrayTests@2797e57c]" name="setUp" is-config="true" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.identityconnectors.common.security.GuardedByteArrayTests@2797e57c]" name="setUp" is-config="true" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testReadOnly()[pri:0, instance:org.identityconnectors.common.security.GuardedByteArrayTests@2797e57c]" name="testReadOnly" duration-ms="1" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadOnly -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.identityconnectors.common.security.GuardedByteArrayTests@2797e57c]" name="tearDown" is-config="true" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:org.identityconnectors.common.security.GuardedByteArrayTests@2797e57c]" name="tearDown" is-config="true" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- org.identityconnectors.common.security.GuardedByteArrayTests -->
      <class name="org.identityconnectors.framework.common.objects.AttributeInfoTests">
        <test-method status="PASS" signature="before()[pri:0, instance:org.identityconnectors.framework.common.objects.AttributeInfoTests@2e8923f5]" name="before" is-config="true" duration-ms="1" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="testEqualsObservesLocale()[pri:0, instance:org.identityconnectors.framework.common.objects.AttributeInfoTests@2e8923f5]" name="testEqualsObservesLocale" duration-ms="1" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEqualsObservesLocale -->
        <test-method status="PASS" signature="testHashCodeIndependentOnLocale()[pri:0, instance:org.identityconnectors.framework.common.objects.AttributeInfoTests@2e8923f5]" name="testHashCodeIndependentOnLocale" duration-ms="1" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHashCodeIndependentOnLocale -->
        <test-method status="PASS" signature="before()[pri:0, instance:org.identityconnectors.framework.common.objects.AttributeInfoTests@2e8923f5]" name="before" is-config="true" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
      </class> <!-- org.identityconnectors.framework.common.objects.AttributeInfoTests -->
      <class name="org.identityconnectors.framework.common.objects.FilterBuilderTests">
        <test-method status="PASS" signature="andFilter()[pri:0, instance:org.identityconnectors.framework.common.objects.FilterBuilderTests@46446e0c]" name="andFilter" duration-ms="2" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- andFilter -->
        <test-method status="PASS" signature="constainsWithFilter()[pri:0, instance:org.identityconnectors.framework.common.objects.FilterBuilderTests@46446e0c]" name="constainsWithFilter" duration-ms="5" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constainsWithFilter -->
        <test-method status="PASS" signature="containsAllValuesFilterFalse()[pri:0, instance:org.identityconnectors.framework.common.objects.FilterBuilderTests@46446e0c]" name="containsAllValuesFilterFalse" duration-ms="1" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- containsAllValuesFilterFalse -->
        <test-method status="PASS" signature="containsAllValuesFilterTrue()[pri:0, instance:org.identityconnectors.framework.common.objects.FilterBuilderTests@46446e0c]" name="containsAllValuesFilterTrue" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- containsAllValuesFilterTrue -->
        <test-method status="PASS" signature="endsWithFilter()[pri:0, instance:org.identityconnectors.framework.common.objects.FilterBuilderTests@46446e0c]" name="endsWithFilter" duration-ms="1" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endsWithFilter -->
        <test-method status="PASS" signature="equalsFilter()[pri:0, instance:org.identityconnectors.framework.common.objects.FilterBuilderTests@46446e0c]" name="equalsFilter" duration-ms="1" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equalsFilter -->
        <test-method status="PASS" signature="greaterThanEqualsToFilter()[pri:0, instance:org.identityconnectors.framework.common.objects.FilterBuilderTests@46446e0c]" name="greaterThanEqualsToFilter" duration-ms="2" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- greaterThanEqualsToFilter -->
        <test-method status="PASS" signature="greaterThanFilter()[pri:0, instance:org.identityconnectors.framework.common.objects.FilterBuilderTests@46446e0c]" name="greaterThanFilter" duration-ms="1" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- greaterThanFilter -->
        <test-method status="PASS" signature="illegalArgument()[pri:0, instance:org.identityconnectors.framework.common.objects.FilterBuilderTests@46446e0c]" name="illegalArgument" duration-ms="1" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Attribute not be null!]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Attribute not be null!
	at org.identityconnectors.framework.common.objects.filter.AttributeFilter.<init>(AttributeFilter.java:38)
	at org.identityconnectors.framework.common.objects.filter.SingleValueAttributeFilter.<init>(SingleValueAttributeFilter.java:37)
	at org.identityconnectors.framework.common.objects.filter.ComparableAttributeFilter.<init>(ComparableAttributeFilter.java:38)
	at org.identityconnectors.framework.common.objects.filter.LessThanFilter.<init>(LessThanFilter.java:31)
	at org.identityconnectors.framework.common.objects.filter.FilterBuilder.lessThan(FilterBuilder.java:312)
	at org.identityconnectors.framework.common.objects.FilterBuilderTests.illegalArgument(FilterBuilderTests.java:218)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:189)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:105)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- illegalArgument -->
        <test-method status="PASS" signature="lessThanEqualToFilter()[pri:0, instance:org.identityconnectors.framework.common.objects.FilterBuilderTests@46446e0c]" name="lessThanEqualToFilter" duration-ms="1" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lessThanEqualToFilter -->
        <test-method status="PASS" signature="lessThanFilter()[pri:0, instance:org.identityconnectors.framework.common.objects.FilterBuilderTests@46446e0c]" name="lessThanFilter" duration-ms="1" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lessThanFilter -->
        <test-method status="PASS" signature="notFilter()[pri:0, instance:org.identityconnectors.framework.common.objects.FilterBuilderTests@46446e0c]" name="notFilter" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- notFilter -->
        <test-method status="PASS" signature="orFilter()[pri:0, instance:org.identityconnectors.framework.common.objects.FilterBuilderTests@46446e0c]" name="orFilter" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orFilter -->
        <test-method status="PASS" signature="startsWithFilter()[pri:0, instance:org.identityconnectors.framework.common.objects.FilterBuilderTests@46446e0c]" name="startsWithFilter" duration-ms="0" started-at="2013-05-31T14:43:07Z" finished-at="2013-05-31T14:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startsWithFilter -->
      </class> <!-- org.identityconnectors.framework.common.objects.FilterBuilderTests -->
      <class name="org.identityconnectors.common.logging.StdOutLoggerTests">
        <test-method status="PASS" signature="checkIsLogger()[pri:0, instance:org.identityconnectors.common.logging.StdOutLoggerTests@7f261b7d]" name="checkIsLogger" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIsLogger -->
        <test-method status="PASS" signature="checkLogFormat()[pri:0, instance:org.identityconnectors.common.logging.StdOutLoggerTests@7f261b7d]" name="checkLogFormat" duration-ms="10" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkLogFormat -->
      </class> <!-- org.identityconnectors.common.logging.StdOutLoggerTests -->
      <class name="org.identityconnectors.common.script.ScriptTests">
        <test-method status="PASS" signature="testBasic()[pri:0, instance:org.identityconnectors.common.script.ScriptTests@23e8f4e1]" name="testBasic" duration-ms="1" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBasic -->
        <test-method status="PASS" signature="testLanguageNotBlank()[pri:0, instance:org.identityconnectors.common.script.ScriptTests@23e8f4e1]" name="testLanguageNotBlank" duration-ms="1" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLanguageNotBlank -->
        <test-method status="PASS" signature="testTextNotNull()[pri:0, instance:org.identityconnectors.common.script.ScriptTests@23e8f4e1]" name="testTextNotNull" duration-ms="0" started-at="2013-05-31T14:43:08Z" finished-at="2013-05-31T14:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTextNotNull -->
      </class> <!-- org.identityconnectors.common.script.ScriptTests -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
